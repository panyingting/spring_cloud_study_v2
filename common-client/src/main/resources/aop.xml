<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <aop:aspectj-autoproxy /> <!-- 打开动态代理-->


    <!-- 然后是声明一个事物建议tx:advice,spring为我们提供了事物的封装，这个就是封装在了<tx:advice/>中 -->
    <!-- <tx:advice/>有一个transaction-manager属性，我们可以用它来指定我们的事物由谁来管理。 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!-- 配置这个事务建议的属性 -->
        <tx:attributes>
            <!-- 指定所有get开头的方法执行在只读事务上下文中 -->
            <tx:method name="get*" read-only="true"/>
            <!-- 其余方法执行在默认的读写上下文中 -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 我们定义一个切面，它匹配FooService接口定义的所有操作 -->
    <aop:config>
        <!-- <aop:pointcut/>元素定义AspectJ的切面表示法，这里是表示x.y.service.FooService包下的任意方法。 -->
        <aop:pointcut id="fooServiceOperation" expression="execution(* com.common.server.istudy.hessian.client.controller.HessianController.*(..))"/>
        <!-- 然后我们用一个通知器：<aop:advisor/>把这个切面和tx:advice绑定在一起，表示当这个切面：fooServiceOperation执行时tx:advice定义的通知逻辑将被执行 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation"/>
    </aop:config>

    <!-- 数据源信息 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/my_db_pyt"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <!-- 数据源信息 -->
    <bean id="driverManagerDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/my_db_pyt"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <!-- 管理事务的类-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- other <bean/> definitions here -->

    <bean id="userBean001" class="com.common.study.bean.UserBean" autowire="byName">
        <property name="dataSource" ref="driverManagerDataSource"/>
        <property name="age" value="1" />
        <property name="name" value="1" />
    </bean>

    <!--<context:component-scan>:不仅具备<context:annotation-config>的所有功能（配置 annotation-config 为 true 或不配，默认也为 true），还可以在指定的package下面扫描对应的bean-->
    <context:component-scan base-package="com.common.server.istudy.aop.cglib.*" annotation-config="true"/>
</beans>